version: '3.4'

services:
  authdb:
    image: mcr.microsoft.com/mssql/server:2022-latest

  # codevaluedb:
  #   image: mcr.microsoft.com/mssql/server:2022-latest

  locationdb:
    image: mcr.microsoft.com/mssql/server:2022-latest

  vehicledb:
    image: mcr.microsoft.com/mssql/server:2022-latest

  filedb:
    image: mcr.microsoft.com/mssql/server:2022-latest

  ridedb:
    image: mcr.microsoft.com/mssql/server:2022-latest

  notificationdb:
    image: mcr.microsoft.com/mssql/server:2022-latest

  xego.services.auth.api:
    image: ${DOCKER_REGISTRY-}xegoservicesauthapi
    build:
      context: .
      dockerfile: Services/Auth/XeGo.Services.Auth.API/Dockerfile

  # xego.services.codevalue.api:
  #   image: ${DOCKER_REGISTRY-}xegoservicescodevalueapi
  #   build:
  #     context: .
  #     dockerfile: Services/CodeValue/XeGo.Services.CodeValue.API/Dockerfile

  # xego.services.codevalue.grpc:
  #   image: ${DOCKER_REGISTRY-}xegoservicescodevaluegrpc
  #   build:
  #     context: .
  #     dockerfile: Services/CodeValue/XeGo.Services.CodeValue.Grpc/Dockerfile

  xego.services.location.api:
    image: ${DOCKER_REGISTRY-}xegoserviceslocationapi
    build:
      context: .
      dockerfile: Services/Location/XeGo.Services.Location.API/Dockerfile

  xego.services.location.grpc:
    image: ${DOCKER_REGISTRY-}xegoserviceslocationgrpc
    build:
      context: .
      dockerfile: Services/Location/XeGo.Services.Location.Grpc/Dockerfile

  xego.services.vehicle.api:
    image: ${DOCKER_REGISTRY-}xegoservicesvehicleapi
    build:
      context: .
      dockerfile: Services/Vehicle/XeGo.Services.Vehicle.API/Dockerfile

  xego.services.file.api:
    image: ${DOCKER_REGISTRY-}xegoservicesfileapi
    build:
      context: .
      dockerfile: Services/File/XeGo.Services.File.API/Dockerfile

  # rabbitmq:
  #   image: rabbitmq:3.12-management-alpine

  portainer:
    image: portainer/portainer-ce 

  elasticsearch:
    image: elasticsearch:8.10.4

  kibana:
    image: kibana:8.10.4

  xego.apigateways.ocelot:
    image: ${DOCKER_REGISTRY-}xegoapigatewaysocelot
    build:
      context: .
      dockerfile: ApiGateways/XeGo.ApiGateways.Ocelot/Dockerfile

  xego.services.notifications.functions:
    image: ${DOCKER_REGISTRY-}xegoservicesnotificationsfunctions
    build:
      context: .
      dockerfile: Services/Notifications/XeGo.Services.Notifications.Functions/Dockerfile

  xego.services.ride.api:
    image: ${DOCKER_REGISTRY-}xegoservicesrideapi
    build:
      context: .
      dockerfile: Services/Ride/XeGo.Services.Ride.API/Dockerfile

volumes:
  portainer_data:
  elasticsearch-data:









