// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XeGo.Services.Price.API.Data;

#nullable disable

namespace XeGo.Services.Price.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231201104930_seedData1")]
    partial class seedData1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("XeGo.Services.Price.API.Entities.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FromDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Percent")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDay")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("XeGo.Services.Price.API.Entities.Price", b =>
                {
                    b.Property<int>("RideId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RideId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int");

                    b.Property<double>("DistanceInMeters")
                        .HasColumnType("float");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<int>("VehicleTypeId")
                        .HasColumnType("int");

                    b.HasKey("RideId");

                    b.HasIndex("DiscountId");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("XeGo.Services.Price.API.Entities.VehicleTypePrice", b =>
                {
                    b.Property<int>("VehicleTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleTypeId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("DropCharge")
                        .HasColumnType("float");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("PricePerKm")
                        .HasColumnType("float");

                    b.HasKey("VehicleTypeId");

                    b.ToTable("VehicleTypePrices");

                    b.HasData(
                        new
                        {
                            VehicleTypeId = 1,
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2023, 12, 1, 10, 49, 30, 184, DateTimeKind.Utc).AddTicks(9660),
                            DropCharge = 1.0,
                            LastModifiedBy = "SYSTEM",
                            LastModifiedDate = new DateTime(2023, 12, 1, 10, 49, 30, 184, DateTimeKind.Utc).AddTicks(9661),
                            PricePerKm = 1.0
                        },
                        new
                        {
                            VehicleTypeId = 2,
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2023, 12, 1, 10, 49, 30, 184, DateTimeKind.Utc).AddTicks(9664),
                            DropCharge = 1.5,
                            LastModifiedBy = "SYSTEM",
                            LastModifiedDate = new DateTime(2023, 12, 1, 10, 49, 30, 184, DateTimeKind.Utc).AddTicks(9664),
                            PricePerKm = 1.5
                        });
                });

            modelBuilder.Entity("XeGo.Services.Price.API.Entities.Price", b =>
                {
                    b.HasOne("XeGo.Services.Price.API.Entities.Discount", "Discount")
                        .WithMany()
                        .HasForeignKey("DiscountId");

                    b.HasOne("XeGo.Services.Price.API.Entities.VehicleTypePrice", "VehicleTypePrice")
                        .WithMany()
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discount");

                    b.Navigation("VehicleTypePrice");
                });
#pragma warning restore 612, 618
        }
    }
}
