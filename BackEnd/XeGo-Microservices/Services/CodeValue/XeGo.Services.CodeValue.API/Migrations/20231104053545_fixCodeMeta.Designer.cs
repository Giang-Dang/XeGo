// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XeGo.Services.CodeValue.API.Data;

#nullable disable

namespace XeGo.Services.CodeValue.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231104053545_fixCodeMeta")]
    partial class fixCodeMeta
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("XeGo.Services.CodeValue.API.Entities.CodeMetaData", b =>
                {
                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RowId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LongDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value10Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value10Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value1Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value1Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value2Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value2Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value3Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value3Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value4Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value4Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value5Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value5Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value6Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value6Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value7Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value7Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value8Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value8Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value9Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value9Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RowId");

                    b.ToTable("CodeMetaData");
                });

            modelBuilder.Entity("XeGo.Services.CodeValue.API.Entities.CodeValue", b =>
                {
                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RowId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectiveEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectiveStartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LongDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ShortDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Value1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Value10")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Value2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Value3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Value4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Value5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Value6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Value7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Value8")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Value9")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RowId");

                    b.HasIndex("Name");

                    b.ToTable("CodeValues");
                });
#pragma warning restore 612, 618
        }
    }
}
